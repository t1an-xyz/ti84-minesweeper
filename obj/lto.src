	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	__Z8mainMenuRh
__Z8mainMenuRh:
	ld	hl, -4
	call	__frameset
	ld	hl, 1
	ld	(ix - 3), hl
	ld	hl, -34
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, 74
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 24
	push	hl
	ld	hl, 312
	push	hl
	ld	hl, 4
	push	hl
	push	hl
	call	_gfx_FillRectangle_NoClip
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	ld	hl, -32
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 2
	push	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	ld	hl, 8
	push	hl
	ld	hl, 64
	push	hl
	ld	hl, _.str
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 1
	push	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	ld	hl, 32
	push	hl
	ld	hl, 64
	push	hl
	ld	hl, _.str.1
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 44
	push	hl
	ld	hl, 64
	push	hl
	ld	hl, _.str.2
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 56
	push	hl
	ld	hl, 64
	push	hl
	ld	hl, _.str.3
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 228
	push	hl
	ld	hl, 60
	push	hl
	ld	hl, _.str.4
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	call	_gfx_SwapDraw
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
BB0_1:
	call	_kb_Scan
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	c, (ix - 4)
	ld	a, c
	cp	a, l
	jr	z, BB0_9
	ld	a, l
	cp	a, 1
	jr	nz, BB0_4
	ld	hl, (ix - 3)
	ld	bc, 3
	call	__irems
	inc	hl
	ld	(ix - 3), hl
	ld	c, 1
	jr	BB0_9
BB0_4:
	ld	a, l
	cp	a, 8
	jr	nz, BB0_8
	ld	de, (ix - 3)
	push	de
	pop	hl
	ld	bc, 2
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	hl, 3
	jp	m, BB0_7
	dec	de
	ex	de, hl
BB0_7:
	ld	(ix - 3), hl
	ld	c, 8
	jr	BB0_9
BB0_8:
	ld	c, l
BB0_9:
	ld	iy, -720878
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	cp	a, 64
	jr	nz, BB0_11
	ld	e, (iy)
	ld	d, (iy + 1)
	ld	hl, (ix + 6)
	ld	a, (hl)
	cp	a, e
	jp	nz, BB0_20
BB0_11:
	ld	(ix - 4), c
	ld	hl, -32
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	de, (ix - 3)
	push	de
	pop	hl
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	jr	nz, BB0_13
	ld	hl, 32
	push	hl
	ld	hl, 64
	push	hl
	ld	hl, _.str.1
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 44
	push	hl
	ld	hl, 64
	push	hl
	ld	hl, _.str.2
	jr	BB0_15
BB0_13:
	push	de
	pop	hl
	ld	bc, 2
	or	a, a
	sbc	hl, bc
	jr	nz, BB0_17
	ld	hl, 44
	push	hl
	ld	hl, 64
	push	hl
	ld	hl, _.str.2
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 32
	push	hl
	ld	hl, 64
	push	hl
	ld	hl, _.str.1
BB0_15:
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 56
	push	hl
	ld	hl, 64
	push	hl
	ld	hl, _.str.3
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	iy, -720878
BB0_16:
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	ld	hl, (ix + 6)
	ld	(hl), a
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 64
	jp	nz, BB0_1
	jr	BB0_19
BB0_17:
	ex	de, hl
	ld	de, 3
	or	a, a
	sbc	hl, de
	ld	iy, -720878
	jr	nz, BB0_16
	ld	hl, 56
	push	hl
	ld	hl, 64
	push	hl
	ld	hl, _.str.3
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 32
	push	hl
	ld	hl, 64
	push	hl
	ld	hl, _.str.1
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 44
	push	hl
	ld	hl, 64
	push	hl
	ld	hl, _.str.2
	push	hl
	call	_gfx_PrintStringXY
	ld	iy, -720878
	pop	hl
	pop	hl
	pop	hl
	jr	BB0_16
BB0_19:
	scf
	sbc	hl, hl
	jr	BB0_21
BB0_20:
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	ld	hl, (ix + 6)
	ld	(hl), a
	ld	hl, (ix - 3)
BB0_21:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z4gameiRh
__Z4gameiRh:
	ld	hl, -40
	call	__frameset
	lea	hl, ix - 36
	ld	(ix - 40), hl
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	hl, (ix + 6)
	push	hl
	ld	hl, (ix - 40)
	push	hl
	call	__ZN4GameC2Ei
	pop	hl
	pop	hl
	ld	hl, (ix - 40)
	push	hl
	call	__ZN4Game9showBoardEv
	pop	hl
BB1_1:
	call	_kb_Scan
	ld	hl, (ix + 9)
	push	hl
	pea	ix - 37
	ld	hl, (ix - 40)
	push	hl
	call	__ZN4Game4tickERhS0_
	pop	hl
	pop	hl
	pop	hl
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 64
	ld	iy, (ix + 9)
	jr	nz, BB1_4
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, (iy)
	cp	a, l
	jr	z, BB1_4
	ld	a, (ix - 1)
	or	a, a
	jr	nz, BB1_6
BB1_4:
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	ld	(ix - 37), a
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	ld	(iy), a
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 64
	jr	nz, BB1_1
	xor	a, a
	jr	BB1_7
BB1_6:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	ld	(iy), a
	ld	a, 1
BB1_7:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	weak	__ZN4GameC2Ei
__ZN4GameC2Ei:
	ld	hl, -12
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	bc, 10
	ld	de, 1
	or	a, a
	sbc	hl, de
	jr	nz, BB2_2
	ld	de, 9
	ld	(iy), de
	jr	BB2_6
BB2_2:
	ld	de, 16
	ld	bc, (ix + 9)
	push	bc
	pop	hl
	ld	bc, 2
	or	a, a
	sbc	hl, bc
	jr	nz, BB2_4
	ld	hl, 40
	ld	(iy), de
	ld	(iy + 3), de
	ld	(iy + 9), hl
	jr	BB2_7
BB2_4:
	ld	hl, (ix + 9)
	ld	bc, 3
	or	a, a
	sbc	hl, bc
	jp	nz, BB2_17
	ld	hl, 30
	ld	bc, 99
	ld	(iy), hl
BB2_6:
	ld	(iy + 3), de
	ld	(iy + 9), bc
BB2_7:
	push	de
	pop	hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	iy, 5592406
	ex	de, hl
	lea	de, iy
	or	a, a
	sbc	hl, de
	ld	hl, -1
	jr	nc, BB2_9
	push	bc
	pop	hl
BB2_9:
	push	hl
	call	__Znaj
	pop	de
	ld	iy, (ix + 6)
	ld	(iy + 12), hl
	ld	bc, 0
	ld	(ix - 3), bc
BB2_10:
	ld	de, (iy + 3)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB2_16
	ld	(ix - 9), bc
	ld	de, (iy)
	push	de
	pop	hl
	ld	bc, 6
	call	__imulu
	push	hl
	pop	iy
	ld	(ix - 12), de
	ex	de, hl
	ld	bc, 2796203
	or	a, a
	sbc	hl, bc
	ld	hl, -1
	jr	nc, BB2_13
	lea	hl, iy
BB2_13:
	push	hl
	call	__Znaj
	ld	(ix - 6), hl
	pop	hl
	ld	hl, (ix - 12)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB2_15
	ld	bc, 6
	call	__imulu
	push	hl
	pop	iy
	ld	de, -6
	add	hl, de
	call	__iremu
	push	hl
	pop	de
	lea	hl, iy
	or	a, a
	sbc	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 6)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
BB2_15:
	ld	iy, (ix + 6)
	ld	iy, (iy + 12)
	ld	de, (ix - 3)
	add	iy, de
	ld	hl, (ix - 6)
	ld	(iy), hl
	ld	iy, (ix + 6)
	ld	bc, (ix - 9)
	inc	bc
	ld	de, 3
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	jp	BB2_10
BB2_16:
	ld	hl, 10
	ld	(iy + 6), hl
	ld	hl, (iy)
	ld	bc, 2
	call	__idivs
	ld	(ix - 3), hl
	ld	(iy + 15), hl
	ex	de, hl
	call	__idivs
	ld	(iy + 24), hl
	ld	de, (ix - 3)
	ld	(iy + 18), de
	ld	(iy + 21), hl
	lea	hl, iy + 27
	ld	(iy + 27), b
	push	hl
	pop	de
	inc	de
	ld	bc, 8
	ldir
	ld	iy, -917456
	ld	l, (iy)
	ld	h, (iy + 1)
	ld.sis	bc, -2
	call	__sand
	ld	(iy), l
	ld	(iy + 1), h
	or	a, a
	sbc	hl, hl
	ld	(-917504), hl
	xor	a, a
	ld	(-917501), a
	ld	sp, ix
	pop	ix
	ret
BB2_17:
	ld	de, (iy + 3)
	jp	BB2_7
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	weak	__ZN4Game9showBoardEv
__ZN4Game9showBoardEv:
	ld	hl, -27
	call	__frameset
	ld	iy, (ix + 6)
	ld	bc, (iy)
	ld	(ix - 3), iy
	ld	de, (iy + 6)
	push	de
	pop	hl
	call	__imulu
	push	hl
	pop	bc
	ld	hl, 320
	or	a, a
	sbc	hl, bc
	ld	bc, 2
	call	__idivs
	ld	(ix - 12), hl
	ld	iy, (ix - 3)
	ld	hl, (iy + 3)
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	de
	ld	hl, 216
	or	a, a
	sbc	hl, de
	ld	bc, 2
	call	__idivs
	ld	(ix - 24), hl
	ld	de, 24
	add	hl, de
	ld	(ix - 15), hl
	ld	hl, -34
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, 4
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	__ZN4Game14drawScoreboardEi
	ld	bc, 0
	ld	iy, (ix - 3)
	pop	hl
	pop	hl
	push	bc
	pop	hl
BB3_1:
	ld	de, (iy + 3)
	ld	(ix - 6), hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	push	bc
	pop	hl
	lea	de, iy
	push	bc
	pop	iy
	jp	p, BB3_19
BB3_2:
	ld	(ix - 9), hl
	push	de
	pop	hl
	ld	bc, (hl)
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB3_18
	lea	bc, iy
	ld	iy, (ix - 3)
	ld	de, (iy + 6)
	push	de
	pop	hl
	ld	(ix - 27), bc
	call	__imulu
	ld	bc, (ix - 12)
	add	hl, bc
	ld	(ix - 18), hl
	ex	de, hl
	ld	bc, (ix - 6)
	call	__imulu
	ld	de, (ix - 15)
	add	hl, de
	ld	(ix - 21), hl
	ld	iy, (ix - 3)
	ld	iy, (iy + 12)
	push	bc
	pop	hl
	ld	de, 3
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	bc, (iy)
	ld	hl, (ix - 9)
	push	hl
	pop	de
	push	bc
	pop	iy
	add	iy, de
	bit	0, (iy + 1)
	jr	nz, BB3_6
	ld	hl, 74
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	iy, (ix - 3)
	ld	hl, (iy + 6)
	push	hl
	push	hl
	ld	hl, (ix - 21)
	push	hl
	ld	hl, (ix - 18)
	push	hl
	call	_gfx_Rectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix - 3)
	ld	iy, (iy + 12)
	ld	hl, (ix - 6)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 9)
	add	iy, de
	ld	iy, (iy)
	push	hl
	pop	de
	add	iy, de
	bit	0, (iy + 2)
	jp	z, BB3_17
	ld	hl, -32
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 2
	ex	de, hl
	ld	iy, (ix - 18)
	add	iy, de
	ld	hl, (ix - 21)
	add	hl, de
	push	hl
	push	iy
	ld	hl, _.str.7
	push	hl
	call	_gfx_PrintStringXY
	jp	BB3_16
BB3_6:
	push	hl
	pop	de
	push	bc
	pop	iy
	add	iy, de
	ld	a, (iy + 2)
	bit	0, (iy)
	jr	nz, BB3_10
	bit	0, a
	jp	nz, BB3_12
	ex	de, hl
	push	bc
	pop	iy
	add	iy, de
	ld	de, (iy + 3)
	dec	de
	push	de
	pop	hl
	ld	bc, 8
	or	a, a
	sbc	hl, bc
	jp	nc, BB3_15
	ex	de, hl
	ld	de, 3
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	de
	ld	hl, ___const._ZN4Game9showBoardEv.colors
	add	hl, de
	ld	l, (hl)
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	iy, (ix - 18)
	ld	hl, 2
	ex	de, hl
	add	iy, de
	ld	hl, (ix - 21)
	add	hl, de
	push	hl
	push	iy
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	iy, (ix - 3)
	ld	iy, (iy + 12)
	ld	hl, (ix - 6)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	iy, (iy)
	ld	de, (ix - 9)
	add	iy, de
	ld	hl, (iy + 3)
	ld	de, 1
	push	de
	push	hl
	call	_gfx_PrintInt
	jp	BB3_14
BB3_10:
	bit	0, a
	jp	nz, BB3_12
	ld	hl, -32
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, (ix - 18)
	inc	hl
	ld	de, (ix - 21)
	inc	e
	ld	iy, (ix - 3)
	ld	bc, (iy + 6)
	push	bc
	push	bc
	push	de
	push	hl
	call	_gfx_FillRectangle_NoClip
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	iy, (ix - 18)
	ld	hl, 2
	ex	de, hl
	add	iy, de
	ld	hl, (ix - 21)
	add	hl, de
	push	hl
	push	iy
	ld	hl, _.str.5
	jr	BB3_13
BB3_12:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	iy, (ix - 18)
	ld	hl, 2
	ex	de, hl
	add	iy, de
	ld	hl, (ix - 21)
	add	hl, de
	push	hl
	push	iy
	ld	hl, _.str.6
BB3_13:
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
BB3_14:
	pop	hl
	pop	hl
BB3_15:
	ld	hl, -75
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	iy, (ix - 3)
	ld	hl, (iy + 6)
	inc	hl
	push	hl
	push	hl
	ld	hl, (ix - 21)
	push	hl
	ld	hl, (ix - 18)
	push	hl
	call	_gfx_Rectangle
	pop	hl
BB3_16:
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 9)
BB3_17:
	ld	iy, (ix - 27)
	inc	iy
	ld	de, 6
	add	hl, de
	ld	de, (ix - 3)
	jp	BB3_2
BB3_18:
	ld	hl, (ix - 6)
	inc	hl
	push	de
	pop	iy
	ld	bc, 0
	jp	BB3_1
BB3_19:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	iy, (ix - 3)
	ld	bc, (iy + 15)
	ld	de, (iy + 6)
	push	de
	pop	hl
	call	__imulu
	ld	bc, (ix - 12)
	add	hl, bc
	ld	(ix - 6), hl
	ld	iy, (ix - 3)
	ld	hl, (iy + 24)
	push	de
	pop	bc
	call	__imulu
	ld	bc, (ix - 15)
	add	hl, bc
	inc	de
	push	de
	push	de
	push	hl
	ld	hl, (ix - 6)
	push	hl
	call	_gfx_Rectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix - 3)
	ld	bc, (iy + 15)
	ld	iy, (ix - 3)
	ld	de, (iy + 6)
	push	de
	pop	hl
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix - 12)
	dec	hl
	add	hl, bc
	ld	(ix - 6), hl
	ld	iy, (ix - 3)
	ld	hl, (iy + 24)
	push	de
	pop	iy
	lea	bc, iy
	call	__imulu
	push	hl
	pop	de
	ld	bc, 23
	ld	hl, (ix - 24)
	add	hl, bc
	add	hl, de
	ld	de, 3
	add	iy, de
	push	iy
	push	iy
	push	hl
	ld	hl, (ix - 6)
	push	hl
	call	_gfx_Rectangle
	ld	sp, ix
	pop	ix
	jp	_gfx_SwapDraw
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	weak	__ZN4Game4tickERhS0_
__ZN4Game4tickERhS0_:
	ld	hl, -12
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	(ix - 9), hl
	ld	hl, (ix + 12)
	ld	(ix - 6), hl
	ld	bc, -917504
	ld	(ix - 3), iy
	ld	hl, (iy + 30)
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB4_3
	push	bc
	call	_atomic_load_32
	pop	bc
	ld	bc, -917504
	call	__lcmpzero
	jr	nz, BB4_3
	ld.sis	bc, -520
	ld.sis	de, 515
	ld	iy, -917456
	ld	l, (iy)
	ld	h, (iy + 1)
	call	__sand
	ld	bc, -917504
	add.sis	hl, de
	ld	(iy), l
	ld	(iy + 1), h
BB4_3:
	push	bc
	call	_atomic_load_32
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	ld	hl, -819201
	ld	e, 1
	call	__lcmpu
	jr	nc, BB4_5
	ld	iy, -917456
	ld	l, (iy)
	ld	h, (iy + 1)
	ld.sis	bc, -2
	call	__sand
	ld	(iy), l
	ld	(iy + 1), h
BB4_5:
	ld	iy, (ix - 3)
	bit	0, (iy + 35)
	jp	nz, BB4_14
	ld	hl, -720866
	ld.sis	bc, 255
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	e, l
	ld	iy, (ix - 9)
	ld	a, (iy)
	cp	a, e
	jr	z, BB4_8
	ld.sis	bc, 255
	call	__sand
	ld	(ix - 12), e
	ld	de, 0
	ld	e, l
	ld	d, h
	push	de
	ld	hl, (ix - 3)
	push	hl
	call	__ZN4Game4moveEi
	ld.sis	bc, 255
	pop	hl
	pop	hl
	ld	a, (ix - 12)
	ld	hl, (ix - 9)
	ld	(hl), a
BB4_8:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	e, l
	ld	iy, (ix - 6)
	ld	a, (iy)
	cp	a, e
	jr	z, BB4_12
	ld	(ix - 9), e
	call	__sand
	ld	de, 0
	ld	e, l
	ld	d, h
	push	de
	ld	hl, (ix - 3)
	push	hl
	call	__ZN4Game3actEi
	push	hl
	pop	bc
	pop	hl
	pop	hl
	ld	de, -1
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB4_11
	ld	hl, (ix - 3)
	push	hl
	pop	iy
	ld	(iy + 35), 1
	push	hl
	ld	(ix - 12), bc
	call	__ZN4Game4loseEv
	ld	bc, (ix - 12)
	pop	hl
BB4_11:
	ld	iy, (ix - 3)
	ld	hl, (iy + 30)
	add	hl, bc
	ld	(iy + 30), hl
	ld	hl, (ix - 6)
	ld	a, (ix - 9)
	ld	(hl), a
BB4_12:
	ld	de, (ix - 3)
	push	de
	pop	iy
	ld	hl, (iy + 15)
	ld	(iy + 18), hl
	ld	hl, (iy + 24)
	ld	(iy + 21), hl
	ld	hl, (iy + 30)
	ld	(ix - 6), hl
	push	de
	pop	hl
	ld	bc, (hl)
	ld	hl, (iy + 3)
	call	__imulu
	ld	bc, (iy + 9)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	ld	hl, (ix - 6)
	or	a, a
	sbc	hl, bc
	jr	nz, BB4_16
	push	de
	pop	iy
	ld	(iy + 34), 1
	ld	(iy + 35), 1
	push	de
	call	__ZN4Game3winEv
	pop	hl
	jr	BB4_15
BB4_14:
	ld	iy, -917456
	ld	l, (iy)
	ld	h, (iy + 1)
	ld.sis	bc, -2
	call	__sand
	ld	(iy), l
	ld	(iy + 1), h
BB4_15:
	ld	de, (ix - 3)
BB4_16:
	ld	(ix + 6), de
	ld	sp, ix
	pop	ix
	jp	__ZN4Game9showBoardEv
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	weak	__ZN4Game4moveEi
__ZN4Game4moveEi:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	a, l
	bit	1, a
	jr	z, BB5_3
	ld	bc, (iy + 15)
	push	bc
	pop	hl
	ld	de, 1
	or	a, a
	sbc	hl, de
	ld	hl, (ix + 9)
	call	pe, __setflag
	jp	m, BB5_3
	dec	bc
	ld	(iy + 15), bc
BB5_3:
	ld	a, l
	bit	2, a
	jr	z, BB5_6
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	bc, (iy + 15)
	ld	de, (iy)
	dec	de
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	ld	hl, (ix + 9)
	call	pe, __setflag
	jp	p, BB5_6
	inc	bc
	ld	iy, (ix + 6)
	ld	(iy + 15), bc
BB5_6:
	ld	bc, 1
	ld	a, l
	bit	3, a
	jr	z, BB5_9
	ld	iy, (ix + 6)
	ld	iy, (iy + 24)
	lea	hl, iy
	ld	de, 1
	or	a, a
	sbc	hl, de
	ld	hl, (ix + 9)
	call	pe, __setflag
	jp	m, BB5_9
	dec	iy
	lea	de, iy
	ld	iy, (ix + 6)
	ld	(iy + 24), de
BB5_9:
	call	__iand
	bit	0, l
	ld	iy, (ix + 6)
	jr	z, BB5_12
	ld	de, (iy + 24)
	ld	bc, (iy + 3)
	dec	bc
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB5_12
	inc	de
	ld	(iy + 24), de
BB5_12:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	weak	__ZN4Game3actEi
__ZN4Game3actEi:
	ld	hl, -12
	call	__frameset
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, 32
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	nz, BB6_5
	lea	hl, iy
	ld	de, (iy + 12)
	ld	(ix - 3), de
	ld	hl, (iy + 24)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 3)
	add	hl, de
	ld	de, (hl)
	ld	iy, (ix + 6)
	ld	hl, (iy + 15)
	ld	bc, 6
	ld	(ix - 6), hl
	call	__imulu
	push	hl
	pop	bc
	ld	(ix - 3), de
	push	de
	pop	iy
	add	iy, bc
	bit	0, (iy + 1)
	jp	nz, BB6_10
	ld	bc, 6
	ld	hl, (ix - 6)
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix - 3)
	add	iy, de
	ld	a, (iy + 2)
	xor	a, 1
	ld	(iy + 2), a
	ld	iy, (ix + 6)
	ld	de, (iy + 27)
	bit	0, a
	ld	hl, -1
	jr	z, BB6_4
	ld	hl, 1
BB6_4:
	add	hl, de
	ld	(iy + 27), hl
	jp	BB6_10
BB6_5:
	ld	bc, 64
	ex	de, hl
	or	a, a
	sbc	hl, bc
	jp	nz, BB6_10
	ld	iy, (ix + 6)
	ld	hl, (iy + 12)
	ld	(ix - 3), hl
	ld	iy, (ix + 6)
	ld	hl, (iy + 24)
	ld	bc, 3
	ld	(ix - 9), hl
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 3)
	add	hl, de
	ld	de, (hl)
	ld	iy, (ix + 6)
	ld	hl, (iy + 15)
	ld	bc, 6
	ld	(ix - 6), hl
	call	__imulu
	push	hl
	pop	bc
	ld	(ix - 3), de
	push	de
	pop	iy
	add	iy, bc
	ld	(ix - 12), iy
	bit	0, (iy + 2)
	ld	hl, 0
	jp	nz, BB6_11
	ld	bc, 6
	ld	hl, (ix - 6)
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix - 3)
	add	hl, bc
	bit	0, (hl)
	ld	hl, -1
	jr	nz, BB6_11
	ld	hl, (ix - 6)
	ld	de, (ix - 3)
	ld	iy, (ix + 6)
	bit	0, (iy + 33)
	jr	nz, BB6_12
	ld	bc, 6
	call	__imulu
	push	hl
	pop	bc
	push	de
	pop	iy
	add	iy, bc
	ld	(iy + 1), 1
	ld	iy, (ix - 12)
	ld	(iy + 2), 0
	ld	hl, (ix + 6)
	push	hl
	call	__ZN4Game13generateBoardEv
	pop	hl
	ld	iy, (ix + 6)
	ld	hl, (iy + 12)
	ld	(ix - 3), hl
	ld	iy, (ix + 6)
	ld	hl, (iy + 24)
	ld	(ix - 9), hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 3)
	add	hl, de
	ld	hl, (hl)
	ld	(ix - 3), hl
	ld	iy, (ix + 6)
	ld	de, (iy + 15)
	push	de
	pop	hl
	ld	bc, 6
	call	__imulu
	push	hl
	pop	bc
	ld	iy, (ix - 3)
	add	iy, bc
	ld	bc, (ix - 9)
	ld	(iy + 1), 0
	jr	BB6_13
BB6_10:
	or	a, a
	sbc	hl, hl
BB6_11:
	ld	sp, ix
	pop	ix
	ret
BB6_12:
	ld	bc, (ix - 9)
	ex	de, hl
BB6_13:
	push	bc
	push	de
	ld	hl, (ix + 6)
	push	hl
	call	__ZN4Game12floodUncoverEii
	pop	de
	pop	de
	pop	de
	jr	BB6_11
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	weak	__ZN4Game4loseEv
__ZN4Game4loseEv:
	ld	hl, -18
	call	__frameset
	ld	iy, (ix + 6)
	ld	bc, (iy + 3)
	ld	hl, (iy)
	ld	de, 1
	ld	(ix - 6), hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB7_2
	or	a, a
	sbc	hl, hl
	ld	(ix - 6), hl
BB7_2:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB7_4
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
BB7_4:
	ld	de, 0
BB7_5:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	z, BB7_14
	ld	iy, (ix + 6)
	ld	iy, (iy + 12)
	ld	(ix - 15), de
	ex	de, hl
	ld	(ix - 3), bc
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	(ix - 9), iy
	ld	hl, (ix - 6)
	ld	bc, 0
	push	bc
	pop	de
BB7_7:
	ld	bc, (ix - 3)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB7_13
	push	de
	pop	bc
	ld	iy, (ix - 9)
	ld	iy, (iy)
	ld	(ix - 12), bc
	ld	(ix - 18), iy
	add	iy, bc
	ld	a, (iy + 2)
	bit	0, (iy)
	jr	nz, BB7_10
	bit	0, a
	ld	de, (ix - 12)
	jr	nz, BB7_11
	jr	BB7_12
BB7_10:
	bit	0, a
	ld	de, (ix - 12)
	jr	nz, BB7_12
BB7_11:
	push	de
	pop	bc
	ld	iy, (ix - 18)
	add	iy, bc
	ld	(iy + 1), 1
BB7_12:
	ld	bc, 6
	push	de
	pop	iy
	add	iy, bc
	lea	de, iy
	dec	hl
	jr	BB7_7
BB7_13:
	ld	de, (ix - 15)
	inc	de
	jr	BB7_5
BB7_14:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	weak	__ZN4Game3winEv
__ZN4Game3winEv:
	ld	hl, -18
	call	__frameset
	ld	iy, (ix + 6)
	ld	bc, (iy + 3)
	ld	hl, (iy)
	ld	de, 1
	ld	(ix - 3), hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB8_2
	or	a, a
	sbc	hl, hl
	ld	(ix - 3), hl
BB8_2:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB8_4
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
BB8_4:
	ld	de, 0
BB8_5:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	z, BB8_12
	ld	(ix - 6), bc
	ld	iy, (ix + 6)
	ld	iy, (iy + 12)
	ld	(ix - 12), de
	ex	de, hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	(ix - 9), iy
	ld	iy, (ix + 6)
	ld	hl, (ix - 3)
	ld	bc, 0
BB8_7:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB8_11
	ld	(ix - 15), hl
	ld	iy, (ix - 9)
	ld	iy, (iy)
	push	bc
	pop	de
	ld	(ix - 18), iy
	add	iy, de
	bit	0, (iy)
	push	bc
	pop	hl
	jr	z, BB8_10
	push	hl
	pop	bc
	ld	iy, (ix - 18)
	add	iy, bc
	ld	(iy + 2), 1
BB8_10:
	ld	bc, 6
	add	hl, bc
	push	hl
	pop	bc
	ld	hl, (ix - 15)
	dec	hl
	ld	iy, (ix + 6)
	jr	BB8_7
BB8_11:
	ld	de, (ix - 12)
	inc	de
	ld	bc, (ix - 6)
	jr	BB8_5
BB8_12:
	ld	hl, (iy + 9)
	ld	(iy + 27), hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	weak	__ZN4Game13generateBoardEv
__ZN4Game13generateBoardEv:
	ld	hl, -36
	call	__frameset
	ld	iy, (ix + 6)
	xor	a, a
	sbc	hl, hl
BB9_1:
	ld	de, (iy + 9)
	ld	(ix - 21), hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB9_23
BB9_2:
	ld	(ix - 6), a
	and	a, 1
	bit	0, a
	jp	nz, BB9_8
BB9_3:
	call	_random
	ld	iy, (ix + 6)
	ld	bc, (iy)
	call	__iremu
	ld	(ix - 9), hl
	call	_random
	ld	iy, (ix + 6)
	ld	bc, (iy + 3)
	call	__iremu
	ld	(ix - 3), hl
	ld	iy, (ix + 6)
	ld	hl, (iy + 15)
	ld	bc, (ix - 9)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	ld	iy, (ix + 6)
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	bc, (ix - 3)
	ld	de, 2
	or	a, a
	sbc	hl, de
	jr	nc, BB9_5
	ld	hl, (iy + 24)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	ld	iy, (ix + 6)
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	bc, (ix - 3)
	ld	de, 2
	or	a, a
	sbc	hl, de
	jr	c, BB9_3
BB9_5:
	ld	iy, (iy + 12)
	push	bc
	pop	hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	iy, (iy)
	ld	hl, (ix - 9)
	ld	bc, 6
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	bit	0, (iy)
	ld	a, 1
	jr	z, BB9_7
	ld	a, (ix - 6)
BB9_7:
	ld	iy, (ix + 6)
	ld	bc, (ix - 3)
	jp	BB9_2
BB9_8:
	ld	iy, (iy + 12)
	ld	(ix - 18), iy
	push	bc
	pop	hl
	ld	de, 3
	ld	(ix - 3), bc
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	de
	lea	hl, iy
	add	hl, de
	ld	iy, (hl)
	ld	de, (ix - 9)
	push	de
	pop	hl
	ld	bc, 6
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	(iy), 1
	push	de
	pop	hl
	dec	hl
	ld	(ix - 6), hl
	inc	de
	ld	hl, (ix - 3)
	push	hl
	pop	bc
	dec	bc
	ld	(ix - 30), bc
	push	hl
	pop	bc
	inc	bc
	ld	(ix - 24), bc
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix - 18)
	add	hl, bc
	ld	(ix - 18), hl
	push	de
	pop	bc
	xor	a, a
BB9_9:
	push	bc
	pop	hl
	ld	de, (ix - 6)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB9_22
	ld	hl, (ix + 6)
	ld	hl, (hl)
	ld	(ix - 33), hl
	ld	hl, -3
	ld	(ix - 15), hl
	ld	de, (ix - 30)
BB9_11:
	ld	hl, (ix - 24)
	ld	(ix - 12), de
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB9_21
	ld	(ix - 27), bc
	ld	hl, (ix - 6)
	ld	bc, 0
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	bc, (ix - 12)
	jp	m, BB9_20
	ld	iy, (ix + 6)
	ld	de, (iy + 3)
	ld	(ix - 36), de
	ld	hl, (ix - 6)
	ld	de, (ix - 33)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB9_20
	push	bc
	pop	hl
	ld	bc, 0
	or	a, a
	sbc	hl, bc
	ld	bc, (ix - 12)
	call	pe, __setflag
	jp	m, BB9_20
	push	bc
	pop	hl
	ld	de, (ix - 36)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB9_20
	ld	bc, (ix - 15)
	ld	hl, (ix - 18)
	add	hl, bc
	ld	de, (hl)
	ld	hl, (ix - 6)
	ld	bc, 6
	call	__imulu
	push	hl
	pop	bc
	ld	(ix - 36), de
	ex	de, hl
	add	hl, bc
	ld	bc, (ix - 12)
	bit	0, (hl)
	jr	nz, BB9_20
	ld	hl, (ix - 6)
	ld	de, (ix - 9)
	or	a, a
	sbc	hl, de
	ld	bc, (ix - 12)
	jr	nz, BB9_19
	ld	hl, (ix - 15)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB9_20
BB9_19:
	ld	hl, (ix - 6)
	ld	bc, 6
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix - 36)
	add	hl, bc
	ex	de, hl
	ld	bc, (ix - 12)
	push	de
	pop	iy
	ld	hl, (iy + 3)
	inc	hl
	ld	(iy + 3), hl
BB9_20:
	inc	bc
	push	bc
	pop	de
	ld	bc, 3
	ld	hl, (ix - 15)
	add	hl, bc
	ld	(ix - 15), hl
	ld	bc, (ix - 27)
	jp	BB9_11
BB9_21:
	ld	hl, (ix - 6)
	inc	hl
	ld	(ix - 6), hl
	jp	BB9_9
BB9_22:
	ld	hl, (ix - 21)
	inc	hl
	ld	iy, (ix + 6)
	ld	bc, (ix - 3)
	jp	BB9_1
BB9_23:
	ld	(iy + 33), 1
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	weak	__ZN4Game12floodUncoverEii
__ZN4Game12floodUncoverEii:
	ld	hl, -33
	call	__frameset
	ld	de, (ix + 9)
	ld	iy, (ix + 12)
	ld	bc, 6
	push	de
	pop	hl
	call	__imulu
	ld	(ix - 12), hl
	lea	hl, iy
	ld	bc, 3
	call	__imulu
	ld	(ix - 15), hl
	ld	bc, 0
	or	a, a
	sbc	hl, hl
	ld	(ix - 3), hl
	ld	(ix - 6), de
	ld	(ix - 9), iy
BB10_1:
	ex	de, hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	push	bc
	pop	de
	jp	m, BB10_9
	lea	hl, iy
	ld	iy, (ix + 6)
	ld	bc, (iy)
	ld	(ix - 18), bc
	ld	iy, (ix + 6)
	ld	bc, (iy + 3)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB10_10
	push	bc
	pop	de
	ld	hl, (ix - 6)
	ld	bc, (ix - 18)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB10_10
	ld	bc, (ix - 9)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB10_10
	ld	iy, (ix + 6)
	ld	hl, (iy + 12)
	ld	de, (ix - 15)
	add	hl, de
	ld	iy, (hl)
	ld	hl, (ix - 12)
	push	hl
	pop	de
	ld	(ix - 18), iy
	add	iy, de
	bit	0, (iy + 1)
	jp	nz, BB10_10
	ld	(ix - 21), iy
	ld	(iy + 1), 1
	ex	de, hl
	ld	hl, (ix - 18)
	add	hl, de
	push	hl
	pop	iy
	ld	(iy + 2), 0
	ld	hl, (iy + 3)
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB10_12
	ld	hl, (ix - 21)
	bit	0, (hl)
	jp	nz, BB10_12
	ld	hl, (ix - 6)
	dec	hl
	ld	(ix - 6), hl
	dec	bc
	ld	(ix - 9), bc
	push	bc
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	__ZN4Game12floodUncoverEii
	ld	(ix - 18), hl
	pop	hl
	pop	hl
	pop	hl
	ld	de, (ix - 6)
	inc	de
	ld	(ix - 6), de
	ld	hl, (ix - 9)
	push	hl
	push	de
	ld	hl, (ix + 6)
	push	hl
	call	__ZN4Game12floodUncoverEii
	ld	(ix - 21), hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 6)
	inc	hl
	ld	(ix - 6), hl
	ld	de, (ix - 9)
	push	de
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	__ZN4Game12floodUncoverEii
	ld	(ix - 24), hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, -2
	ex	de, hl
	ld	iy, (ix - 6)
	add	iy, de
	ld	(ix - 6), iy
	ld	hl, (ix - 9)
	inc	hl
	ld	(ix - 9), hl
	push	hl
	push	iy
	ld	hl, (ix + 6)
	push	hl
	call	__ZN4Game12floodUncoverEii
	ld	(ix - 27), hl
	pop	hl
	pop	hl
	pop	hl
	ld	de, 2
	ld	hl, (ix - 6)
	add	hl, de
	ld	(ix - 6), hl
	ld	de, (ix - 9)
	push	de
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	__ZN4Game12floodUncoverEii
	ld	(ix - 30), hl
	pop	hl
	pop	hl
	pop	hl
	ld	de, -2
	ld	iy, (ix - 6)
	add	iy, de
	ld	(ix - 6), iy
	ld	hl, (ix - 9)
	inc	hl
	ld	(ix - 9), hl
	push	hl
	push	iy
	ld	hl, (ix + 6)
	push	hl
	call	__ZN4Game12floodUncoverEii
	ld	(ix - 33), hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 6)
	inc	hl
	ld	(ix - 6), hl
	ld	de, (ix - 9)
	push	de
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	__ZN4Game12floodUncoverEii
	push	hl
	pop	de
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	inc	hl
	ld	bc, (ix - 18)
	add	hl, bc
	ld	bc, (ix - 21)
	add	hl, bc
	ld	bc, (ix - 24)
	add	hl, bc
	ld	bc, (ix - 27)
	add	hl, bc
	ld	bc, (ix - 30)
	add	hl, bc
	ld	bc, (ix - 33)
	add	hl, bc
	add	hl, de
	ld	(ix - 3), hl
	ld	de, 6
	ld	hl, (ix - 12)
	add	hl, de
	ld	(ix - 12), hl
	ld	de, 3
	ld	hl, (ix - 15)
	add	hl, de
	ld	(ix - 15), hl
	ld	hl, (ix - 6)
	inc	hl
	ld	(ix - 6), hl
	ld	de, (ix + 9)
	ld	iy, (ix + 12)
	ld	bc, 0
	jp	BB10_1
BB10_9:
	or	a, a
	sbc	hl, hl
	push	hl
	pop	de
	jr	BB10_11
BB10_10:
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, hl
BB10_11:
	add	hl, de
	ld	sp, ix
	pop	ix
	ret
BB10_12:
	ld	de, (ix - 3)
	ld	hl, 1
	jr	BB10_11
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	weak	__ZN4Game14drawScoreboardEi
__ZN4Game14drawScoreboardEi:
	ld	hl, -9
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix - 6), hl
	ld	hl, (ix + 9)
	ld	(ix - 9), hl
	ld	c, 1
	call	__ishl
	ld	(ix - 3), hl
	ld	hl, 74
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 320
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	ld	a, e
	add	a, 16
	ld	e, a
	push	de
	push	hl
	ld	hl, (ix - 9)
	push	hl
	push	hl
	call	_gfx_FillRectangle_NoClip
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	ld	hl, -32
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 2
	push	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	iy, (ix - 6)
	ld	hl, (iy + 9)
	ld	de, (iy + 27)
	or	a, a
	sbc	hl, de
	ld	de, 3
	push	de
	push	hl
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	ld	hl, 272
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	push	de
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, -917504
	push	hl
	call	_atomic_load_32
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	ld	l, 15
	call	__lshru
	ld	hl, 3
	push	hl
	push	bc
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	ld	(ix + 6), 1
	ld	(ix + 9), 1
	ld	sp, ix
	pop	ix
	jp	_gfx_SetTextScale
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -4
	call	__frameset
	lea	hl, ix - 1
	ld	(ix - 4), hl
	ld	hl, (-851900)
	ld	a, (-851897)
	push	hl
	call	_srand
	pop	hl
	call	_gfx_Begin
BB12_1:
	ld	hl, (ix - 4)
	push	hl
	call	__Z8mainMenuRh
	push	hl
	pop	de
	pop	hl
	push	de
	pop	hl
	ld	bc, -1
	or	a, a
	sbc	hl, bc
	jr	z, BB12_3
	ld	hl, (ix - 4)
	push	hl
	push	de
	call	__Z4gameiRh
	pop	hl
	pop	hl
	bit	0, a
	jr	nz, BB12_1
BB12_3:
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"MINESWEEPER", 0

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	"Beginner", 0

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	"Intermediate", 0

	section	.rodata,"a",@progbits
	private	_.str.3
_.str.3:
	db	"Expert", 0

	section	.rodata,"a",@progbits
	private	_.str.4
_.str.4:
	db	"Mode: Select    2nd: Flag", 0

	section	.rodata,"a",@progbits
	private	___const._ZN4Game9showBoardEv.colors
___const._ZN4Game9showBoardEv.colors:
	dl	25
	dl	4
	dl	224
	dl	9
	dl	96
	dl	12
	dl	0
	dl	74

	section	.rodata,"a",@progbits
	private	_.str.5
_.str.5:
	db	"M", 0

	section	.rodata,"a",@progbits
	private	_.str.6
_.str.6:
	db	"X", 0

	section	.rodata,"a",@progbits
	private	_.str.7
_.str.7:
	db	"F", 0

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 6d9aa7a16db70f3d02ae304b08d4a03011281fef)"
	extern	_random
	extern	__Unwind_SjLj_Register
	extern	_srand
	extern	_gfx_SetTextFGColor
	extern	_gfx_Begin
	extern	__lcmpzero
	extern	__sand
	extern	__ishl
	extern	_gfx_PrintInt
	extern	__idivs
	extern	__setflag
	extern	__Znaj
	extern	__iand
	extern	__ixor
	extern	__lshru
	extern	_memset
	extern	__frameset
	extern	_gfx_SetTextBGColor
	extern	_atomic_load_32
	extern	_gfx_FillRectangle_NoClip
	extern	_kb_Scan
	extern	_gfx_SwapDraw
	extern	_gfx_SetDraw
	extern	_gfx_FillScreen
	extern	__Unwind_SjLj_Unregister
	extern	__irems
	extern	__iremu
	extern	__imulu
	extern	_gfx_SetColor
	extern	_gfx_Rectangle
	extern	_gfx_PrintStringXY
	extern	__lcmpu
	extern	_gfx_End
	extern	_gfx_SetTextXY
	extern	__frameset0
	extern	_gfx_SetTextScale
